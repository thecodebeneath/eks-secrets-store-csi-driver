---
apiVersion: v1
kind: Secret
metadata:
  name: explicit-ks-secret
  namespace: default
type: Opaque
stringData:
  value_set_by_ks: ${gotk_junk}
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-deployment
  namespace: default
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: nginx-deployment-sa
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "nginx-deployment-aws-secrets"
      - name: explicit-ks-secret-volume
        secret:
          secretName: explicit-ks-secret
      containers:
      - name: nginx-deployment
        image: nginx
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env: 
        - name: EXPLICIT_KS_SECRET_ENV
          valueFrom: 
            secretKeyRef: 
              name: explicit-ks-secret
              key: value_set_by_ks
        - name: DYNAMIC_SM_CLUSTER_TYPE
          valueFrom: 
            secretKeyRef: 
              name: from-sm-environment-vars
              key: CLUSTER_TYPE 
        - name: DYNAMIC_SM_KC_ARGOCD_CLIENT_SECRET
          valueFrom: 
            secretKeyRef: 
              name: from-sm-environment-vars
              key: KC_ARGOCD_CLIENT_SECRET
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        - name: explicit-ks-secret-volume
          mountPath: "/etc/explicit-ks-secret-volume"
          readOnly: true
